name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Java and utilities
        run: |
          sudo apt update -y
          sudo apt install -y openjdk-11-jdk wget unzip

      - name: Install Android command‑line tools
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cli.zip
          unzip cli.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          # Le zip crée un dossier 'cmdline-tools', on le déplace en 'latest'
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          # Exporte les variables d'environnement pour les étapes suivantes
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_ENV

      - name: Accept Android SDK licenses & install platforms/build-tools
        run: |
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT --update
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "build-tools;30.0.3" "platforms;android-30"
          # Accepter toutes les licences Android (ignore la sortie pour éviter Broken pipe)
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Build APK with Buildozer
        uses: digreatbrian/buildozer-action@v2
        with:
          python-version: 3.11
          buildozer-cmd: buildozer -v android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ./bin/*.apk
